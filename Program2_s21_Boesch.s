			
			;	KENDALL BOESCH 
			;	CS 2240
			;	PROFESSOR ALFORD
			;	PROGRAM TWO ARRAY PROCESSING
			;	LOADING 2 ARRAYS FROM MEMORY AND 
			;	AND CALCULATING THE SUM OF ALL 
			; 	ELEMENTS IN EACH AND THE SUM OF 
			; 	ALL ELEMENTS SQUARED IN EACH;
			
			
			AREA ProgramTwo_s21_KBoesch, CODE, READONLY													; REGISTER KEY
			ENTRY																					; R0 = ADDRESS OF ARR1
																									; R1 = HOLDS CURRENT TERM AS ITERATING THROUGH ARRAY
			ADR R0, arr1				; LOAD ADDRESS OF FIRST ARRAY INTO R0						; R2 = RUNNING SUM OF ALL ELEMENTS
			ADR R8, arr2				; LOAD ADDRESS OF SECOND ARRAY INTO R8						; R3 = MULTIPLIER IN PRODUCT FUNC
																									; R4 = RESULT OF TERM SQUARED (IN PRODUCT FUNCTION) 
			; ARRAY ONE																						; R5 = RUNNING SUM OF ALL TERMS SQUARED
			LDR R1, [R0] 				; R1 <--- MEMORY[R0] ---- FIRST ELEMENT 					; R6 = FINAL SUM OF ALL ARR1 ELEMETS
			BL SUM 						; CALL SUM FUNCTION											; R7 = FINAL SUM OF ALL SQUARED TERMS
			BL PRODUCT					; LOAD R1 INTO R4 ---- R4 HOLDS FIRST ELEMENT				; R8 = ADDRESS OF ARR2
			LDR R1, [R0 , #4]			; R1 <--- MEMORY[R0 + 4] ---- R1 HOLDS 2ND ELEMENT			; R9 = FINAL SUM ARR2
			BL SUM						; CALL SUM FUNCTION											; R10 = FINAL SUM ALL SQUARED TERMS 
			BL PRODUCT					; CALL PRODUCT FUNCTION
			LDR R1, [R0, #8] 			; R1 <--- MRMORY[R0 + 8]
			BL SUM						; CALL SUM FUNCTION
			BL PRODUCT					; CALL PRODUCT FUNCTION
			LDR R1, [R0, #12] 			; R1 <---MEMORY[R0 + 12]
			BL SUM						; CALL SUM FUNCTION 
			BL PRODUCT					; CALL PRODUCT FUNCTION
			LDR R1, [R0, #16]			; R1 <---MEMORY[R0 + 16]
			BL SUM						; CALL SUM FUNCTION
			BL PRODUCT					; CALL PRODUCT FUNCTION
			
			LDR R12, =0x40000000
		
			; FINAL VALUES FOR ARRAY 1							
			STR R2, [R12]
			STR R5, [R12, #8]
		
			; RESET REGISTERS FOR ARRAY 2
			MOV R2, #0					; RESET RUNNING TOTOAL FOR SECOND ARRAY COMNPUTATION
			MOV R5, #0					; RESET RUNNING PRODUCT TOTAL FOR SECOND ARRAY COMPUTATION
			
			; ARRAY 2
			LDR R1, [R8]				; R1 <--- MEMORY[R8]
			BL PRODUCT					; CALL PRODUCT FUNCTION
			BL SUM						; CALL SUM FUNCTION
			LDR R1, [R8, #4]			; R1 <---MEMORY[R8 + 4] -- ELEMENT 2; INDEX 1
			BL SUM						; CALL SUM FUNCTION
			BL PRODUCT					; CALL PRODUCT FUNCTION
			LDR R1, [R8, #8]			; R1 <---MEMORY[R8 + 8] -- ELEMENT 3; INDEX 2
			BL SUM						; CALL SUM FUNCTION
			BL PRODUCT					; CALL PRODUCT FUNCTION
			LDR R1, [R8, #12]			; R1 <---MEMORY[R8 + 12]
			BL SUM						; CALL SUM FUNCTION
			BL PRODUCT					; CALL PRODUCT FUNCTION
			LDR R1, [R8, #16] 			; R1 <---MEMORY[R8 + 16]
			BL SUM 						; CALL SUM FUNCTION
			BL PRODUCT 					; CALL PRODUCT FUNCTION
			
			; FINAL VALUES FOR ARRAY 2
			STR R2, [R12, #4]
			STR R5, [R12, #12]
			
		
		
	
stop 		B stop 

	; ARRAYS TO BE  ITERATED 
arr1 DCD 1, 2, 1, 3, 4
arr2 DCD 3, -4, 2, -3, 1

; SUM FUNCTION: ADDS ARRAY ELEMENTS TOGETHER & RETURNS RUNNING TOTOAL IN R2
SUM 	ADD R2, R2, R1				;R2 HOLDS RUNNING SUM
		BX LR

; PRODUCT FUNCTION: SQUARES VALUE IN R1, STORES IN R4. THEN ADDS THE SQUARE TO THE RUNNING SUM OF ALL SQUARED TERMSSD IN R5
PRODUCT MOV R3, R1					; R3  == R1
		MUL R4, R3, R1				; MULTIPLY R1 * R3 (WHICH ARE SAME NUMBER, SO SQUARING TERM) RESULT IN R4
		ADD R5, R5, R4				; R5 IS RUNNING TOTOAL 
		BX LR

		END